{
    ports:
    [
        "443:5000", // for registry
        "9418:9418" // for gut
    ],
    volumes:
    [
        "/registry:/var/lib/registry" // for registry
    ],
    env:
    [
        "PATH=$PATH:/usr/local/go/bin",
        "GOROOT=$HOME/go",
        "PATH=$PATH:$GOROOT/bin",
        "GOPATH=/go",
        "PATH=$PATH:$GOPATH/bin",
        "DOCKER_BUILDTAGS=include_oss include_gcs",
        "DISTRIBUTION_DIR=/go/src/github.com/docker/distribution",
        "REGISTRY_HTTP_TLS_CERTIFICATE=/root/registry/keys/fullchain2.pem",
        "REGISTRY_HTTP_TLS_KEY=/root/registry/keys/privkey2.pem"
    ],
    copy:
    [
        "cmd/registry/config-dev.yml:/etc/docker/registry/config.yml",
        "*:$DISTRIBUTION_DIR"
    ],
    dependencies:
    [
        {
            name: "apt-packages",
            cmd:
            '''
                sudo mkdir -p /etc/docker/registry
                sudo mkdir -p $DISTRIBUTION_DIR
                sudo chmod a+w /etc/docker/registry
                sudo chmod a+w $DISTRIBUTION_DIR
            '''
        },
        {
            name: "gut",
            cmd:
            '''
                sudo apt-get install -y curl vim zlib1g-dev gettext inotify-tools build-essential autoconf
                curl -O https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz
                tar -xvf go1.6.linux-amd64.tar.gz
                pwd
                sudo pwd
                sudo cp $GOROOT/go/bin/go /usr/local/bin/
                env
                sudo chmod -R a+rw $GOPATH
                go get github.com/dupperinc/gut
                go install github.com/dupperinc/gut
                $GOPATH/bin/gut build --build-parallel
            '''
        }
    ],
    commands: {
        devenv: {
            server:
            '''
                echo "Executing server script..."
                cp /root/dupperd/.gitignore /root/dupperd/.gutignore
                ulimit -n 9999
                ulimit
            '''
            client:
             '''
                ssh-add -l &>/dev/null
                if [ "$?" == 2 ]; then
                  test -r ~/.ssh-agent && \
                  eval "$(<~/.ssh-agent)" >/dev/null

                  ssh-add -l &>/dev/null
                  if [ "$?" == 2 ]; then
                    (umask 066; ssh-agent > ~/.ssh-agent)
                    eval "$(<~/.ssh-agent)" >/dev/null
                    ssh-add
                  fi
                fi

                mkdir -p $path
                ssh-add $identityFile
                gut sync $user@$server:$path $1
            '''
        },
        build: {
            server:
            '''
                echo "Building...."
                cd $DISTRIBUTION_DIR
                make PREFIX=/go clean binaries
                echo "Building.... Done"
            '''
        }
        deploy: {
            server:
            '''
                echo "starting registry..."
                $GOPATH/bin/registry serve /etc/docker/registry/config.yml
            '''
        }
    }
}
