{
    ports:
    [
        "80:80", // for certs
        "5000:5000", // for registry
        "9418:9418" // for gut
    ],
    dependencies:
    [
        {
            name: "apt-packages",
            cmd:
            '''
                apt-get install -y software-properties-common build-essential golang vim git
            '''
        },
        {
            name: "environment",
            cmd:
            '''
                set -ex
                echo 'export GOPATH=/go' >> ~/.bashrc
                echo 'export DOCKER_BUILDTAGS="include_oss include_gcs"' >> ~/.bashrc
                echo 'export DISTRIBUTION_DIR=/go/src/github.com/docker/distribution' >> ~/.bashrc
                mkdir -p /etc/docker/registry
                cp /root/distribution/cmd/registry/config-dev.yml /etc/docker/registry/config.yml
                mkdir -p /go/src/github.com/docker/distribution
                cp -R * /go/src/github.com/docker/distribution

            '''
        }
    ],
    commands: {
        devenv: {
            server:
            '''
                echo "Executing server script..."
                cp /root/dupperd/.gitignore /root/dupperd/.gutignore
                ulimit -n 9999
                ulimit
            '''
            client:
             '''
                ssh-add -l &>/dev/null
                if [ "$?" == 2 ]; then
                  test -r ~/.ssh-agent && \
                  eval "$(<~/.ssh-agent)" >/dev/null

                  ssh-add -l &>/dev/null
                  if [ "$?" == 2 ]; then
                    (umask 066; ssh-agent > ~/.ssh-agent)
                    eval "$(<~/.ssh-agent)" >/dev/null
                    ssh-add
                  fi
                fi

                mkdir -p $path
                ssh-add $identityFile
                gut sync $user@$server:$path $1
            '''
        },
        build: {
            server:
            '''
                echo "Building...."
                export GOPATH=/go
                export DOCKER_BUILDTAGS="include_oss include_gcs"
                export DISTRIBUTION_DIR=/go/src/github.com/docker/distribution
                cd /go/src/github.com/docker/distribution
                pwd
                make PREFIX=/go clean binaries
                echo "Building.... Done"
            '''
        }
        deploy: {
            server:
            '''
                /go/bin/registry serve /etc/docker/registry/config.yml
            '''
        }
        generate-certs: {
            server:
            '''
                git clone https://github.com/certbot/certbot
                cd certbot
                ./certbot-auto certonly --standalone -d distribution.athakwani.dupper.com
            '''
        }
    }
}
